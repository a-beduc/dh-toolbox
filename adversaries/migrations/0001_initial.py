# Generated by Django 5.2.5 on 2025-10-08 03:26

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('PAS', 'passive'), ('ACT', 'action'), ('REA', 'reaction')], max_length=3)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tactic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DamageProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dice_number', models.PositiveSmallIntegerField(default=0, help_text='0 dice means flat damage', validators=[django.core.validators.MinValueValidator(0)])),
                ('dice_type', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('bonus', models.SmallIntegerField(default=0)),
                ('damage_type', models.CharField(choices=[('PHY', 'Physical'), ('MAG', 'Magical'), ('BTH', 'Both')], default='PHY', max_length=3)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('dice_number', 0), ('dice_type', 0), ('bonus__gte', 0)), models.Q(('dice_number__gte', 1), ('dice_type__gte', 2)), _connector='OR'), name='dp_valid_shape'), models.UniqueConstraint(fields=('dice_number', 'dice_type', 'bonus', 'damage_type'), name='damage_profile_entity')],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bonus', models.SmallIntegerField()),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('name', 'bonus'), name='experience_entity')],
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('range', models.CharField(choices=[('MELEE', 'melee'), ('VCLOSE', 'very close'), ('CLOSE', 'close'), ('FAR', 'far'), ('VFAR', 'very far'), ('OOR', 'out of range')], default='MELEE', max_length=6)),
                ('weapon_damage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='weapons', to='adversaries.damageprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Adversary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('tier', models.PositiveSmallIntegerField(choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV')], default=1)),
                ('type', models.CharField(choices=[('BRU', 'bruiser'), ('HOR', 'horde'), ('LEA', 'leader'), ('MIN', 'minion'), ('RAN', 'ranged'), ('SKU', 'skulk'), ('SOC', 'social'), ('SOL', 'solo'), ('STA', 'standard'), ('SUP', 'support')], default='STA', max_length=3)),
                ('description', models.TextField(blank=True, null=True)),
                ('difficulty', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('threshold_major', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('threshold_severe', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hit_point', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('horde_hit_point', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('stress_point', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('atk_bonus', models.SmallIntegerField(blank=True, null=True)),
                ('experiences', models.ManyToManyField(blank=True, to='adversaries.experience')),
                ('features', models.ManyToManyField(blank=True, to='adversaries.feature')),
                ('tactics', models.ManyToManyField(blank=True, to='adversaries.tactic')),
                ('weapon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='adversaries.weapon')),
            ],
        ),
        migrations.AddConstraint(
            model_name='weapon',
            constraint=models.UniqueConstraint(fields=('name', 'range', 'weapon_damage'), name='weapon_entity'),
        ),
        migrations.AddIndex(
            model_name='adversary',
            index=models.Index(fields=['name'], name='adversaries_name_67125c_idx'),
        ),
        migrations.AddIndex(
            model_name='adversary',
            index=models.Index(fields=['type', 'tier'], name='adversaries_type_dcaeb4_idx'),
        ),
    ]
